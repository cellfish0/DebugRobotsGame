//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Robo"",
            ""id"": ""1570c957-c74d-4986-a3b8-88fe1228585c"",
            ""actions"": [
                {
                    ""name"": ""Format"",
                    ""type"": ""Button"",
                    ""id"": ""ee18c486-b120-4a37-8f5c-a0e0d9433baf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Undo"",
                    ""type"": ""Button"",
                    ""id"": ""a5bbae80-3275-4a87-b111-8d98eb71c68c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""21ebea67-e15e-4a7d-bb1f-34128be67ea4"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Format"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""CTRLQ"",
                    ""id"": ""0c2c1043-32ca-4f1f-ab8a-878d97abe858"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""9e75126f-7556-452e-8d96-ad4fe9457251"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""76ab7a3a-1e9c-4a2b-b2a1-fa3e718a576c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""CTRLZ"",
                    ""id"": ""774bcf31-bafa-4ed4-b7d4-667ec209d9d6"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""0baacc22-9caa-4e55-b9b2-e222fc0a255f"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""88319767-4b48-4087-8226-f1d309f8c664"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Default"",
            ""id"": ""bed974ec-08cf-4d0e-a865-8c24e9a8cb77"",
            ""actions"": [
                {
                    ""name"": ""CursorDelta"",
                    ""type"": ""Value"",
                    ""id"": ""47f04b8f-085c-417e-9ec5-70d0d8038c37"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e41ecd8c-02eb-4337-8216-ed7217e0d62d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Robo
        m_Robo = asset.FindActionMap("Robo", throwIfNotFound: true);
        m_Robo_Format = m_Robo.FindAction("Format", throwIfNotFound: true);
        m_Robo_Undo = m_Robo.FindAction("Undo", throwIfNotFound: true);
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_CursorDelta = m_Default.FindAction("CursorDelta", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Robo
    private readonly InputActionMap m_Robo;
    private IRoboActions m_RoboActionsCallbackInterface;
    private readonly InputAction m_Robo_Format;
    private readonly InputAction m_Robo_Undo;
    public struct RoboActions
    {
        private @Controls m_Wrapper;
        public RoboActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Format => m_Wrapper.m_Robo_Format;
        public InputAction @Undo => m_Wrapper.m_Robo_Undo;
        public InputActionMap Get() { return m_Wrapper.m_Robo; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RoboActions set) { return set.Get(); }
        public void SetCallbacks(IRoboActions instance)
        {
            if (m_Wrapper.m_RoboActionsCallbackInterface != null)
            {
                @Format.started -= m_Wrapper.m_RoboActionsCallbackInterface.OnFormat;
                @Format.performed -= m_Wrapper.m_RoboActionsCallbackInterface.OnFormat;
                @Format.canceled -= m_Wrapper.m_RoboActionsCallbackInterface.OnFormat;
                @Undo.started -= m_Wrapper.m_RoboActionsCallbackInterface.OnUndo;
                @Undo.performed -= m_Wrapper.m_RoboActionsCallbackInterface.OnUndo;
                @Undo.canceled -= m_Wrapper.m_RoboActionsCallbackInterface.OnUndo;
            }
            m_Wrapper.m_RoboActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Format.started += instance.OnFormat;
                @Format.performed += instance.OnFormat;
                @Format.canceled += instance.OnFormat;
                @Undo.started += instance.OnUndo;
                @Undo.performed += instance.OnUndo;
                @Undo.canceled += instance.OnUndo;
            }
        }
    }
    public RoboActions @Robo => new RoboActions(this);

    // Default
    private readonly InputActionMap m_Default;
    private IDefaultActions m_DefaultActionsCallbackInterface;
    private readonly InputAction m_Default_CursorDelta;
    public struct DefaultActions
    {
        private @Controls m_Wrapper;
        public DefaultActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CursorDelta => m_Wrapper.m_Default_CursorDelta;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void SetCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterface != null)
            {
                @CursorDelta.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCursorDelta;
                @CursorDelta.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCursorDelta;
                @CursorDelta.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCursorDelta;
            }
            m_Wrapper.m_DefaultActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CursorDelta.started += instance.OnCursorDelta;
                @CursorDelta.performed += instance.OnCursorDelta;
                @CursorDelta.canceled += instance.OnCursorDelta;
            }
        }
    }
    public DefaultActions @Default => new DefaultActions(this);
    public interface IRoboActions
    {
        void OnFormat(InputAction.CallbackContext context);
        void OnUndo(InputAction.CallbackContext context);
    }
    public interface IDefaultActions
    {
        void OnCursorDelta(InputAction.CallbackContext context);
    }
}
